name: Enviar RelatÃ³rio por Email

on:
  # Agenda: executar todos os dias Ã s 9h (horÃ¡rio de BrasÃ­lia = 12h UTC)
  schedule:
    - cron: '0 12 * * *'  # Diariamente ao meio-dia UTC (9h BRT)
  
  # Permite executar manualmente pelo GitHub
  workflow_dispatch:

jobs:
  gerar-e-enviar:
    runs-on: ubuntu-latest
    
    steps:
      # Passo 1: Baixar o cÃ³digo do repositÃ³rio
      - name: ðŸ“¥ Checkout do repositÃ³rio
        uses: actions/checkout@v3
      
      # Passo 2: Instalar R
      - name: ðŸ”§ Configurar R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.0'
      
      # Passo 3: Instalar dependÃªncias do sistema (libcurl, pandoc, etc)
      - name: ðŸ“¦ Instalar dependÃªncias do sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            pandoc \
            pandoc-citeproc \
            texlive-latex-base \
            texlive-fonts-recommended \
            texlive-fonts-extra \
            texlive-latex-extra
      
      # Passo 4: Instalar pacotes do R
      - name: ðŸ“š Instalar pacotes do R
        run: |
          install.packages(c("rmarkdown", "tidyverse", "knitr"), repos = "https://cloud.r-project.org")
        shell: Rscript {0}
      
      # Passo 5: Gerar o PDF
      - name: ðŸ“„ Gerar relatÃ³rio PDF
        run: |
          Rscript gerar_pdf.R
      
      # Passo 6: Verificar se o PDF foi criado
      - name: âœ… Verificar PDF gerado
        run: |
          if [ -f "program_conecta_campinas.pdf" ]; then
            echo "âœ“ PDF encontrado!"
            ls -lh program_conecta_campinas.pdf
          else
            echo "âœ— PDF nÃ£o foi gerado!"
            exit 1
          fi
      
      # Passo 7: Enviar email com o PDF anexado
      - name: ðŸ“§ Enviar email
        uses: dawidd6/action-send-mail@v3
        with:
          # ConfiguraÃ§Ãµes do servidor SMTP Brevo
          server_address: smtp-relay.brevo.com
          server_port: 587
          secure: true
          
          # Credenciais (armazenadas nos Secrets do GitHub)
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          
          # Detalhes do email
          subject: ProgramaÃ§Ã£o Conecta - Prefeitura - ${{ github.event.repository.updated_at }}
          to: rikibragada@gmail.com
          from: hkbragada@gmail.com
          
          # Corpo do email
          body: |
            Bom dia,
            
            Segue em anexo a programaÃ§Ã£o diÃ¡ria das manutenÃ§Ãµes previstas para a cidade de Campinas.
            
            Data de geraÃ§Ã£o: ${{ github.event.repository.updated_at }}
            
            Bot - HK CONSULTORIA
          
          # Arquivo anexado
          attachments: program_conecta_campinas.pdf
          
          # Converter corpo para HTML
          convert_markdown: true
      
      # Passo 8: Confirmar sucesso
      - name: âœ… ConcluÃ­do
        run: |
          echo "âœ“ Email enviado com sucesso!"
          echo "Data/hora: $(date)"
